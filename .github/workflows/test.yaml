# name: test
# on: [push, pull_request, workflow_call]
# jobs:
#   feature-matrix:
#     uses: ./.github/workflows/feature-matrix.yml
#   test:
#     name: test ${{ matrix.package.name }} (${{ matrix.package.features }})
#     runs-on: ubuntu-latest
#     needs: [feature-matrix]
#     strategy:
#       fail-fast: false
#       matrix:
#         package: ${{ fromJson(needs.feature-matrix.outputs.matrix) }}
#     steps:
#       - uses: actions/checkout@v4
#       - uses: dtolnay/rust-toolchain@stable
#       - name: Lint
#         # for now we are not too pedantic
#         continue-on-error: true
#         run: >-
#           cargo clippy --package "${{ matrix.package.name }}" --no-default-features --features "${{ matrix.package.features }}" --tests --benches --examples --all-targets -- -Dclippy::all -Dclippy::pedantic
#       - name: Test
#         run: >-
#           cargo test --package "${{ matrix.package.name }}" --no-default-features --features "${{ matrix.package.features }}" --tests --benches --examples --all-targets
#   publish:
#     name: publish (dry-run)
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: dtolnay/rust-toolchain@stable
#       - name: Publish crates (dry-run)
#         uses: romnn/publish-crates@main
#         with:
#           dry-run: true
#           resolve-versions: true

name: test
on:
  push: {}
  workflow_call: {}
  pull_request:
    types: [opened, synchronize, reopened, edited]
  schedule:
    # 8AM first day of the month in JAN and JUNE to keep workflow badges up-to-date
    - cron: "0 8 1 1,6 *"

jobs:
  feature-matrix:
    uses: ./.github/workflows/feature-matrix.yaml

  test:
    name: test ${{ matrix.package.name }} (${{ matrix.package.features }})
    runs-on: ${{ matrix.os }}
    needs: [feature-matrix]
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-24.04]
        package: ${{ fromJson(needs.feature-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: Homebrew/actions/setup-homebrew@master
      - uses: dtolnay/rust-toolchain@stable
      - name: Test
        # prettier-ignore
        run: >-
          cargo test 
          --package "${{ matrix.package.name }}"
          --no-default-features
          --features "${{ matrix.package.features }}"
          --all-targets

  publish:
    name: publish (dry-run)
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Publish crates (dry-run)
        uses: romnn/publish-crates@main
        with:
          dry-run: true
          resolve-versions: true
